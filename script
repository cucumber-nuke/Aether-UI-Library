-- ... (이전 코드는 동일) ...

function Library:CreateWindow(name)
    -- ... (기본 UI 요소 생성) ...
    
    -- 모든 모서리를 둥글게
    local function AddUICorner(instance, radius)
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, radius or 5)
        corner.Parent = instance
    end
    
    -- 알림 시스템
    local function CreateNotification(text)
        local Notification = Instance.new("Frame")
        local NotifText = Instance.new("TextLabel")
        
        Notification.Name = "Notification"
        Notification.Parent = ScreenGui
        Notification.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        Notification.Position = UDim2.new(1, 20, 1, -20)
        Notification.Size = UDim2.new(0, 250, 0, 50)
        Notification.AnchorPoint = Vector2.new(1, 1)
        AddUICorner(Notification)
        
        NotifText.Parent = Notification
        NotifText.BackgroundTransparency = 1
        NotifText.Size = UDim2.new(1, -10, 1, 0)
        NotifText.Position = UDim2.new(0, 5, 0, 0)
        NotifText.Font = Enum.Font.SourceSans
        NotifText.Text = text
        NotifText.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotifText.TextSize = 14
        
        -- 애니메이션
        TweenService:Create(Notification, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {
            Position = UDim2.new(1, -20, 1, -20)
        }):Play()
        
        wait(2)
        
        TweenService:Create(Notification, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {
            Position = UDim2.new(1, 300, 1, -20)
        }):Play()
        
        wait(0.5)
        Notification:Destroy()
    end
    
    -- 설정 탭 생성 (항상 마지막에 위치)
    local SettingsTab = Window:CreateTab("설정")
    SettingsTab.TabButton.LayoutOrder = 9999 -- 항상 마지막에 위치하도록
    
    -- 기본 설정 옵션들
    SettingsTab:AddToggle("UI 토글 키", "RightShift", function(key)
        -- UI 토글 키 설정
    end)
    
    SettingsTab:AddButton("UI 초기화", function()
        -- UI 위치 초기화
        CreateNotification("UI가 초기화되었습니다.")
    end)
    
    -- 탭 전환 애니메이션
    local function SwitchTab(newTab)
        if Window.CurrentTab then
            TweenService:Create(Window.CurrentTab, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                Position = UDim2.new(0, -300, 0, 5)
            }):Play()
            wait(0.3)
            Window.CurrentTab.Visible = false
        end
        
        newTab.Position = UDim2.new(0, 300, 0, 5)
        newTab.Visible = true
        TweenService:Create(newTab, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
            Position = UDim2.new(0, 5, 0, 5)
        }):Play()
        
        Window.CurrentTab = newTab
    end
    
    -- 버튼 생성 함수 수정
    function Tab:AddButton(text, callback)
        local Button = Instance.new("TextButton")
        -- ... (버튼 기본 설정) ...
        
        AddUICorner(Button)
        
        -- 호버 애니메이션
        Button.MouseEnter:Connect(function()
            TweenService:Create(Button, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            }):Play()
        end)
        
        Button.MouseLeave:Connect(function()
            TweenService:Create(Button, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            }):Play()
        end)
        
        Button.MouseButton1Click:Connect(function()
            callback()
            CreateNotification(text .. " 실행됨")
        end)
        
        return Button
    end
    
    -- 토글 생성 함수 수정
    function Tab:AddToggle(text, default, callback)
        local Toggle = Instance.new("Frame")
        -- ... (토글 기본 설정) ...
        
        AddUICorner(Toggle)
        
        Toggle.MouseButton1Click:Connect(function()
            local newState = not Toggle.Enabled
            Toggle.Enabled = newState
            
            TweenService:Create(Toggle.Indicator, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                BackgroundColor3 = newState and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 64, 64)
            }):Play()
            
            callback(newState)
            CreateNotification(text .. (newState and " 활성화됨" or " 비활성화됨"))
        end)
        
        return Toggle
    end
end
